---
title: "P5: Mode Choice"
author: "Rub√©n Figueroa"
format: html
editor: visual
---

```{r, message=FALSE, warning=FALSE}
library(tidyverse)
library(here)
library(knitr)
library(srvyr)
library(tidycensus)
library(jtools)
```

## Dataset

To create my working dataset, I will first load the trip and people data from NHTS:

```{r, message=FALSE, warning=FALSE}
trips <- here("data",
              "NHTS",
              "trippub1.csv") |>
  read_csv(show_col_types = FALSE)

people <- here("data",
               "NHTS",
               "perpub1.csv") |>
  read_csv(show_col_types = FALSE)
```

Now, I will apply filters to keep only trips made by young adults (ages 18 - 35), to or from school, and of less than 2 miles in length:

```{r, message=FALSE, warning=FALSE}
visit_trips <- trips |>
  filter(WHYTO == "08" |
           WHYFROM == "08")
# "08" means "attend school as a student"

sr_visit_trips <- visit_trips |>
  filter(R_AGE >= 18 & R_AGE <= 35)

short_sr_visit_trips <- sr_visit_trips |>
  filter(TRPMILAD < 2)

nrow(short_sr_visit_trips)
```

This leaves me with 2,295 trips to analyze.

## Outcome Variable

Now, I will create my outcome variable, which indicates whether the mode of transportation was walking or not:

```{r, message=FALSE, warning=FALSE}
short_sr_visit_trips <- short_sr_visit_trips |>
  mutate(walk = TRPTRANS == "01")

short_sr_visit_trips |>
  mutate(Mode = factor(ifelse(walk, "Walk", "Other mode"),
                       levels = c("Walk", "Other mode"))) |>
  group_by(Mode) |>
  summarise(`Number of trips` = n()) |>
  mutate(`Percent of trips` = 
           paste0(round(100*`Number of trips`/sum(`Number of trips`)), "%")) |>
  kable()
```

About 56% of all trips in the sample are walking trips.

## Predictor variables

I'm going to predict the likelihood of a trip taking place by walking based on the following predictors:

-   Distance (TRPMILES)

-   Age (R_AGE)

-   Urban or rural status (URBRUR)

-   Gender (R_SEX)

-   Household income (HHFAMINC)

-   Vehicle availability (whether HHVEHCNT is greater than zero)

-   Worker status (WORKER)

-   Bike usage safe? (bike_safe, created from BIKE_DFR and BIKE_GKP)

### Distance

Let's look at the distribution of trip distances:

```{r}
# Will drop negative distance values:
sample_trips <- short_sr_visit_trips |>
  filter(TRPMILES >=0)
# 8 observations dropped

ggplot(sample_trips) +
  geom_histogram(aes(x = TRPMILES),
                 color = "gray",
                 fill = "salmon",
                 binwidth = 0.1) +
  scale_x_continuous(name = "Trip distance (miles)",
                     breaks = seq(0, 2, by=0.1)) +
  scale_y_continuous(name = "Number of trips in sample") +
  theme_minimal()
```

### Age

Let's look at the distribution of age. It is clear that students attending school are generally younger than 25:

```{r, message=FALSE, warning=FALSE}
ggplot(sample_trips) +
  geom_histogram(aes(x = R_AGE),
                 color = "gray",
                 fill = "salmon",
                 binwidth = 1) +
  scale_x_continuous(name = "Traveler's age (years)") +
  scale_y_continuous(name = "Number of trips in sample") +
  theme_minimal()
```

### Urban

Let's look at the distribution of urban. About 90% of trips are made in urban settings:

```{r, message=FALSE, warning=FALSE}
# Label de values:
sample_trips <- sample_trips |>
  mutate(urban = URBRUR == "01")

sample_trips |>
  group_by(urban) |>
  summarise(`Number of trips` = n()) |>
  mutate(`Percent of trips` = 
           paste0(round(100*`Number of trips`/sum(`Number of trips`)), "%")) |>
  kable()
```

### Gender

Let's look at the distribution of gender. The majority of the population identifies as female:

```{r, message=FALSE, warning=FALSE}
# Will only keep positive distance values:
sample_trips <- sample_trips |>
  filter(R_SEX != "-7")
# 2 observations dropped

sample_trips <- sample_trips |>
  mutate(female = R_SEX == "02")

sample_trips |>
  group_by(female) |>
  summarise(`Number of trips` = n()) |>
  mutate(`Percent of trips` = 
           paste0(round(100*`Number of trips`/sum(`Number of trips`)), "%")) |>
  kable()
```

### Income

We will first create a new variable to reflect income as continuous:

```{r, message=FALSE, warning=FALSE, results='hide'}
states_in_sample <- unique(trips$HHSTATE)

all_pums <- get_pums(variables = c("FINCP", "AGEP"),
                     state = states_in_sample,
                     survey = "acs1",
                     year = 2018,
                     recode = TRUE)

yg_pums <- all_pums |>
  filter(AGEP >= 18 & AGEP <= 35) |>
  filter(FINCP >= 0) |>
  mutate(inc_cat = case_when(FINCP < 10000 ~ "01",
                             FINCP < 15000 ~ "02",
                             FINCP < 25000 ~ "03",
                             FINCP < 35000 ~ "04",
                             FINCP < 50000 ~ "05",
                             FINCP < 75000 ~ "06",
                             FINCP < 100000 ~ "07",
                             FINCP < 125000 ~ "08",
                             FINCP < 150000 ~ "09",
                             FINCP < 200000 ~ "10",
                             TRUE ~ "11"))

pums_summary <- yg_pums |>
  group_by(inc_cat) |>
  summarise(`Median income` = median(FINCP))

pums_summary |>
  kable(format.args = list(big.mark = ","))

sample_trips <- sample_trips |>
  mutate(HHFAMINC = as.numeric(HHFAMINC)) |>
  filter(HHFAMINC > 0) |>
  mutate(income = pums_summary$`Median income`[HHFAMINC])
# 35 observations dropped
```

Now, let's look at the distribution of this new variable:

```{r, message=FALSE, warning=FALSE}
ggplot(sample_trips) +
  geom_histogram(aes(x = income),
                 bins = 20,
                 color = "gray",
                 fill = "salmon") +
  scale_x_continuous(transform = "log",
                     breaks = breaks <- 5000*2^seq(0, 6, by=1),
                     labels = paste0("$", formatC(breaks, 
                                                  format = "d",
                                                  big.mark = ",")),
                     name = "Annual household income") +
  scale_y_continuous(name = "Number of trips in sample") +
  theme_minimal()
```

### Vehicle availability

I'll also include vehicle availability in my analysis. Only 8% of HH report having 0 vehicles:

```{r, message=FALSE, warning=FALSE}
sample_trips <- sample_trips |>
  mutate(zero_veh = HHVEHCNT == 0)

sample_trips |>
  group_by(zero_veh) |>
  summarise(`Number of trips` = n()) |>
  mutate(`Percent of trips` = 
           paste0(round(100*`Number of trips`/sum(`Number of trips`)), "%")) |>
  kable()
```

### Worker status

I'll also add a variable that indicates whether the person making the trip is a worker. Fewer than half of the trips are made by workers:

```{r, message=FALSE, warning=FALSE}
sample_trips <- sample_trips |>
  mutate(worker = WORKER == "01")

sample_trips |>
  group_by(worker) |>
  summarise(`Number of trips` = n()) |>
  mutate(`Percent of trips` = 
           paste0(round(100*`Number of trips`/sum(`Number of trips`)), "%")) |>
  kable()
```

### Bike safe?

Finally, I'll include a variable that states whether the person believes that biking is safe or not (because of poor infra or safety issues). Only 8% of the individuals in the sample believe biking is not safe:

```{r, message=FALSE, warning=FALSE}
bike_data <- people |>
  select(HOUSEID, PERSONID, BIKE_DFR, BIKE_GKP)

sample_trips <- sample_trips |>
  left_join(bike_data) |>
  filter(BIKE_DFR != "-9" & BIKE_GKP != "-9") |>
  mutate(biking_safe = ifelse(BIKE_DFR == "-1" & BIKE_GKP == "-1", 
                            TRUE, FALSE))
# 69 observations dropped

sample_trips |>
  group_by(biking_safe) |>
  summarise(`Number of trips` = n()) |>
  mutate(`Percent of trips` = 
           paste0(round(100*`Number of trips`/sum(`Number of trips`)), "%")) |>
  kable()
```

### Final sample size

```{r, message=FALSE, warning=FALSE}
nrow(sample_trips)
```

My final sample contains 2,181 observations.

## Estimate model

Let's now estimate the logistic regression:

```{r, message=FALSE, warning=FALSE}
model <- glm(walk ~ 
               TRPMILES +
               R_AGE +
               urban +
               female +
               income +
               zero_veh +
               worker + 
               biking_safe,
             data = sample_trips,
             family = "binomial")

coeff_labels <- c("Trip distance (miles)" = "TRPMILES",
                  "Age (years)" = "R_AGE",
                  "Urban trip" = "urbanTRUE",
                  "Female" = "femaleTRUE",
                  "Annual household income" = "income",
                  "Zero-vehicle household" = "zero_vehTRUE",
                  "Worker status" = "workerTRUE",
                  "Bike is safe" = "biking_safeTRUE")

export_summs(model, 
             robust = "HC3", 
             coefs = coeff_labels,
             error_format = "(p = {p.value})",
             error_pos = "right")
```

Plot of predicted probabilities for distance:

```{r, message=FALSE, warning=FALSE}
effect_plot(model, pred = "TRPMILES", interval = TRUE) +
  scale_x_continuous(name = "Trip distance (miles)",
                     breaks = seq(0, 2.0, by  =0.1)) +
  scale_y_continuous(name = "Probabilitity of walking",
                     breaks = breaks <- seq(0, 1, by = 0.1),
                     labels = paste0(breaks*100, "%"))
```

Plot of predicted probabilities for HH with zero vehicles:

```{r, message=FALSE, warning=FALSE}
effect_plot(model = model, pred = "zero_veh", interval = TRUE) +
  scale_y_continuous(name = "Probability of walking for a particular trip",
                     breaks = breaks <- seq(0, 1, by=0.1),
                     labels = paste0(breaks*100, "%")) +
  scale_x_discrete(name = paste0("Does this person live in a zero-vehicle HH?"),
                   labels = c("No", "Yes"))
```

Plot of predicted probabilities for people that believe bikes are safe:

```{r, message=FALSE, warning=FALSE}
effect_plot(model = model, pred = "biking_safe", interval = TRUE) +
  scale_y_continuous(name = "Probability of walking for a particular trip",
                     breaks = breaks <- seq(0, 1, by=0.1),
                     labels = paste0(breaks*100, "%")) +
  scale_x_discrete(name = paste0("Does this person believe biking is safe?"),
                   labels = c("No", "Yes"))
```
